@Library('share_lib@main') _

pipeline {
    agent any

    parameters {
        choice(name: 'DEV_BRANCH', choices: ['dev1', 'dev2', 'dev3'], description: 'Select developer branch')
    }

    environment {
        IMAGE_PREFIX = "ganesh6498"
        DEPLOY_YAML = "deployment.yaml"
    }

    stages {

        stage('Docker Login') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub',
                                                  usernameVariable: 'DOCKER_USER',
                                                  passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                    echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                    '''
                }
            }
        }

        stage("Build and Push Docker Image") {
            steps {
                script {
                    def dockerfile = ''
                    def imageName = ''
                    if (params.DEV_BRANCH == 'dev1') {
                        dockerfile = 'Dockerfile'
                        imageName = 'dev1-app'
                    } else if (params.DEV_BRANCH == 'dev2') {
                        dockerfile = 'web1.Dockerfile'
                        imageName = 'dev2-app'
                    } else if (params.DEV_BRANCH == 'dev3') {
                        dockerfile = 'web2.Dockerfile'
                        imageName = 'dev3-app'
                    }

                    env.IMAGE_NAME = imageName

                    sh """
                    docker build -f ${dockerfile} -t ${IMAGE_PREFIX}/${imageName}:${BUILD_NUMBER} .
                    docker push ${IMAGE_PREFIX}/${imageName}:${BUILD_NUMBER}
                    sed -i 's|image: .*|image: ${IMAGE_PREFIX}/${imageName}:${BUILD_NUMBER}|' ${DEPLOY_YAML}
                    """
                }
            }
        }

        stage("See the Variable") {
            steps {
                script {
                    def branch = params.DEV_BRANCH
                    echo "Pushing changes to branch: ${branch}"

                    sh '''
                    git config --global user.email "ganeshreddy7610@gmail.com"
                    git config --global user.name "ganesh-redy"
                    '''
                }
            }
        }

        stage('Push to Branch') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'github-token', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASS')]) {
                    script {
                        sh """
                            # Cleanup any previous temp directory
                            rm -rf git-temp

                            # Clone the repo
                            git clone https://${GIT_USER}:${GIT_PASS}@github.com/ganesh-redy/gitops-test2.git git-temp
                            cd git-temp

                            # Checkout target branch (create if doesn't exist)
                            git checkout ${params.DEV_BRANCH} || git checkout -b ${params.DEV_BRANCH}

                            # Copy updated file from Jenkins workspace
                            cp ../${DEPLOY_YAML} .

                            # Configure Git
                            git config user.email "ganeshreddy7610@gmail.com"
                            git config user.name "ganesh-redy"

                            # Commit and push changes
                            git add ${DEPLOY_YAML}
                            git commit -m "Update from pipeline build ${BUILD_NUMBER}" || echo "No changes to commit"
                            git remote set-url origin https://${GIT_USER}:${GIT_PASS}@github.com/ganesh-redy/gitops-test2.git
                            git push origin ${params.DEV_BRANCH}
                        """
                    }
                }
            }
        }
    }
}
