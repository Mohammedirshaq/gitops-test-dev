@Library('share_lib@main') _ 
pipeline {
    agent any
    parameters {
        choice(name: 'DEV_BRANCH', choices: ['dev1', 'dev2', 'dev3'], description: 'Select developer branch')
    }
    environment {
        IMAGE_PREFIX = "ganesh6498"
        DEPLOY_YAML = "deployment.yaml"
    }
    stage('docker login') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub', 
                                                  usernameVariable: 'DOCKER_USER', 
                                                  passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                    echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                    '''
                }
            }
        }
    stages {
        stage("Build and Push Docker Image") {
            steps {
                script {
                    def dockerfile = ''
                    def imageName = ''
                    if (params.DEV_BRANCH == 'dev1') {
                        dockerfile = 'Dockerfile'
                        imageName = 'dev1-app'
                    } else if (params.DEV_BRANCH == 'dev2') {
                        dockerfile = 'web1.Dockerfile'
                        imageName = 'dev2-app'
                    } else if (params.DEV_BRANCH == 'dev3') {
                        dockerfile = 'web2.Dockerfile'
                        imageName = 'dev3-app'
                    }

                    env.IMAGE_NAME = imageName // it can use in any block because it was declared as env

                    sh """
                    docker build -f ${dockerfile} -t ${IMAGE_PREFIX}/${imageName}:${BUILD_NUMBER} .
                    docker push ${IMAGE_PREFIX}/${imageName}:${BUILD_NUMBER}
                    sed -i 's|image: .*|image: ${IMAGE_PREFIX}/${imageName}:${BUILD_NUMBER}|' ${DEPLOY_YAML}
                    """
                }
            }
        }
        stage("See the variable"){
         step{
        script { 
         def branch = params.DEV_BRANCH
         def token = okay()
         echo "Pushing changes to branch: ${branch}"
         echo "token ${token}"
         sh """ 
          
         git config --global user.email "ganeshreddy7610@gmail.com"
         git config --global user.name "ganesh-redy"

"""
             
        
}
}
     }

        stage("Push to Branch") {
            steps {
                script {
                    def branch = params.DEV_BRANCH
                    def token = okay()  // secure function from your shared library

                    echo "Pushing changes to branch: ${branch}"
                    
                    sh """
                    rm -rf .git
                    git init
                    git add .
                    git commit -m "Update from pipeline build ${BUILD_NUMBER}"
                    git branch -M ${branch}
                    git remote add origin https://${token}@github.com/ganesh-redy/gitops-test2.git
                    git push -f origin ${branch}
                    """
                }
            }
        }
    }
}
